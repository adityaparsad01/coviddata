{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","App.js","index.js","Components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","App","state","fetchdata","this","setState","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.759bb7b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__6uDsn\",\"card\":\"Cards_card__3Jtps\",\"infected\":\"Cards_infected__2WnWE\",\"recovered\":\"Cards_recovered__FiIrg\",\"deaths\":\"Cards_deaths__31YZV\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport styles from \"./Cards.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  // console.log(lastUpdate);\r\n\r\n  if (!confirmed) {\r\n    return \"Loading\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography varaint=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varaint=\"body2\">\r\n              Number Of Active Cases Of COVID-19{\" \"}\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography varaint=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varaint=\"body2\">\r\n              Number Of Recovered Cases Of COVID-19{\" \"}\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography varaint=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varaint=\"body2\">\r\n              Number Of Deaths Cases Of COVID-19{\" \"}\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(url);\r\n\r\n    return {\r\n      confirmed,\r\n      recovered,\r\n      deaths,\r\n      lastUpdate,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line } from \"react-chartjs-2\";\r\n// import Reactchart from \"chart.js\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nfunction Chart() {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  });\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart } from \"./Components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchdata = await fetchData();\r\n    this.setState({ data: fetchdata });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Cards data={data} />\r\n        <Chart />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3VTxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__U0BpY\"};"],"sourceRoot":""}